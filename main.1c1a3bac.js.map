{"version":3,"sources":["scripts/main.js"],"names":["urlWithAllPhones","urlWithDetails","body","document","querySelector","request","link","fetch","then","response","ok","Error","status","statusText","json","getFirstReceivedDetails","url","makeArraywithPromises","array","Promise","race","fastest","onSuccessFirstReceived","catch","error","onError","getAllSuccessfulDetails","all","list","onSuccessfulDetails","getThreeFastestDetails","onSuccessThreeFastest","arrayofPromises","item","push","id","phone","insertAdjacentHTML","name","toUpperCase","div","createElement","ul","h3","append","className","textContent","li","data","p"],"mappings":"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","file":"main.1c1a3bac.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\nconst urlWithAllPhones = 'https://mate-academy.github.io'\n  + '/phone-catalogue-static/api/phones.json';\nconst urlWithDetails = 'https://mate-academy.github.io/'\n  + 'phone-catalogue-static/api/phones/';\nconst body = document.querySelector('body');\n\nfunction request(link) {\n  return fetch(link)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nfunction getFirstReceivedDetails(url) {\n  request(url)\n    .then(json => makeArraywithPromises(json))\n    .then(array => Promise.race(array))\n    .then(fastest => onSuccessFirstReceived(fastest))\n    .catch(error => onError(error));\n}\n\nfunction getAllSuccessfulDetails(url) {\n  request(url)\n    .then(json => makeArraywithPromises(json))\n    .then(array => Promise.all(array))\n    .then(list => onSuccessfulDetails(list))\n    .catch(error => onError(error));\n}\n\nfunction getThreeFastestDetails(url) {\n  request(url)\n    .then(json => makeArraywithPromises(json))\n    .then(array => Promise.all([\n      Promise.race(array), Promise.race(array), Promise.race(array)]))\n    .then(list => onSuccessThreeFastest((list)))\n    .catch(error => onError(error));\n}\n\nfunction makeArraywithPromises(list) {\n  const array = [];\n  const arrayofPromises = [];\n\n  for (const item of list) {\n    array.push(`${urlWithDetails}${item.id}.json`);\n  }\n\n  for (const item of array) {\n    arrayofPromises.push(request(item));\n  }\n\n  return arrayofPromises;\n}\n\nfunction onSuccessFirstReceived(phone) {\n  body.insertAdjacentHTML('afterbegin', `\n  <div class=\"first-received\">\n    <h3>First Received</h3>\n    <ul>\n      <li>${phone.name} - ${phone.id.toUpperCase()}</li>\n    </ul>\n  </div>\n  `);\n}\n\nfunction onSuccessfulDetails(list) {\n  const div = document.createElement('div');\n  const ul = document.createElement('ul');\n  const h3 = document.createElement('h3');\n\n  body.append(div);\n  div.append(h3);\n  div.append(ul);\n  div.className = 'all-successful';\n  h3.textContent = 'All Successful';\n\n  for (const item of list) {\n    const li = document.createElement('li');\n\n    ul.append(li);\n    li.textContent = `${item.name} - ${item.id.toUpperCase()}`;\n  }\n}\n\nfunction onSuccessThreeFastest(list) {\n  body.insertAdjacentHTML('afterbegin', `\n  <div class=\"three-received\">\n    <h3>Three Fastest Received</h3>\n    <ul>\n      <li>${list[0].name} - ${list[0].id.toUpperCase()}</li>\n      <li>${list[1].name} - ${list[1].id.toUpperCase()}</li>\n      <li>${list[2].name} - ${list[2].id.toUpperCase()}</li>\n    </ul>\n  </div>\n  `);\n}\n\nfunction onError(data) {\n  const div = document.createElement('div');\n  const p = document.createElement('p');\n\n  document.body.append(div);\n  div.append(p);\n  div.className = 'error';\n  p.textContent = `Oops! ${data}`;\n}\n\ngetFirstReceivedDetails(urlWithAllPhones);\ngetAllSuccessfulDetails(urlWithAllPhones);\ngetThreeFastestDetails(urlWithAllPhones);\n"]}